---
const { items } = Astro.props

import * as wcag from 'wcag-contrast'

function getLabelColor(color) {
  const score = wcag.hex('#fffff', color).toFixed(1)
  if (score >= 3.0) {
    return '--colorLight'
  } else {
    return '--colorDark'
  }
}
---

<style>
  ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: grid;
    gap: var(--spacer);
    grid-template-columns: 1fr 1fr;
  }

  li {
    aspect-ratio: 95 / 66;
    background: var(--thumbnailBackground, transparent);
    color: var(--thumbnailText, var(--colorDark));
    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: 100%;
  }

  li > * {
    grid-row: 1 / 2;
    grid-column: 1 / 2;
  }

  a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    position: relative;
  }

  header {
    z-index: 100;
    opacity: 0;
    transition: var(--transition);
    font-weight: bold;
  }

  a:hover header {
    opacity: 1;
  }

  header::after {
    content: '';
    background: var(--thumbnailBackground, transparent);
    position: absolute;
    inset: 0;
    z-index: -1;
  }

  img {
    display: block;
    height: 100%;
    width: 100%;
    object-fit: scale-down;
  }
</style>

<ul>    
  {items.map(item => (
    <li style={`--thumbnailBackground: ${item.thumbnail?.background}; --thumbnailText: var(${getLabelColor(item.thumbnail?.background)});`}>
      <a href={item.url}>
        <header>{item.title}</header>
      </a>
      {item.thumbnail?.src && item.thumbnail?.alt
        ? <img src={item.thumbnail.src} alt={item.thumbnail.alt} />
        : null
      }
      </li>
  ))}
</ul>
